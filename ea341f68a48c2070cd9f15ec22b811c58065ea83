{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dc0b77f2_3a03c110",
        "filename": "internal/storage/db.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "Incomplete sentence?",
      "fixSuggestions": [
        {
          "fixId": "d0cb2c5e_b83b3635",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 34,
                "startChar": 0,
                "endLine": 35,
                "endChar": 0
              },
              "replacement": "// Clients of DB are expected to use the [DB.Panic] method\n// to report database errors or corruption.\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9c3d9d1_dc3760ab",
        "filename": "internal/storage/db.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "Should we have documentation on the interaction of concurrent Set/Delete/DeleteRange and Scan?",
      "fixSuggestions": [
        {
          "fixId": "bd11cf03_85f1dbf1",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 70,
                "startChar": 0,
                "endLine": 71,
                "endChar": 0
              },
              "replacement": "\t// Delete deletes any value associated with key. It is safe to call\n\t// Delete concurrently with other operations.\n"
            },
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 74,
                "startChar": 0,
                "endLine": 75,
                "endChar": 0
              },
              "replacement": "\t// DeleteRange deletes all key-value pairs with start ≤ key ≤ end. It is safe to call\n\t// DeleteRange concurrently with other operations.\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9705de5_496e8537",
        "filename": "internal/storage/db.go",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "Does Close call Flush?  Should be documented one way or another.",
      "fixSuggestions": [
        {
          "fixId": "41ae6421_ce927ec3",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 88,
                "startChar": 0,
                "endLine": 89,
                "endChar": 0
              },
              "replacement": "\t// Close closes the database, flushing any pending changes.\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc78bd66_9a5edcfe",
        "filename": "internal/storage/db.go",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "Should document whether it is OK to change key after passing it to Delete or the other methods.  The lifetime seems clear for the DB methods, but for the Batch methods it is less clear.",
      "fixSuggestions": [
        {
          "fixId": "0aba67fd_99428ca0",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 113,
                "startChar": 0,
                "endLine": 113,
                "endChar": 0
              },
              "replacement": "\t// The start and end keys are not deleted.\n\t// The key must not be modified after being passed to Delete.\n\tDelete(key []byte)\n\n\t// DeleteRange deletes all key-value pairs with start ≤ key ≤ end.\n\t// The start and end keys are not deleted.\n\t// The start and end keys must not be modified after being passed to DeleteRange.\n"
            },
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 116,
                "startChar": 0,
                "endLine": 116,
                "endChar": 0
              },
              "replacement": "\t// The key must not be modified after being passed to Set.\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "691f18f6_76f88ffa",
        "filename": "internal/storage/db.go",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "s/bytes.Buffer/strings.Builder/",
      "fixSuggestions": [
        {
          "fixId": "ea351456_1252a1ff",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 12,
                "startChar": 0,
                "endLine": 13,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 142,
                "startChar": 0,
                "endLine": 143,
                "endChar": 0
              },
              "replacement": "\tvar b strings.Builder\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8d65568_00b19d04",
        "filename": "internal/storage/db.go",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "Is there a reason to export this function?",
      "fixSuggestions": [
        {
          "fixId": "f4de7440_ef99e574",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 167,
                "startChar": 0,
                "endLine": 168,
                "endChar": 0
              },
              "replacement": "// fmt formats data for printing,\n"
            },
            {
              "path": "internal/storage/db.go",
              "range": {
                "startLine": 172,
                "startChar": 0,
                "endLine": 173,
                "endChar": 0
              },
              "replacement": "func fmt(data []byte) string {\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32c28fc1_8de4ce11",
        "filename": "internal/storage/mem.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "s/locks/unlocks/ (I hope).",
      "fixSuggestions": [
        {
          "fixId": "ff70836f_21f62494",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/mem.go",
              "range": {
                "startLine": 46,
                "startChar": 0,
                "endLine": 47,
                "endChar": 0
              },
              "replacement": "// Unlock unlocks the mutex with the given name.\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9147ac1f_3099ec55",
        "filename": "internal/storage/mem.go",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "I don\u0027t understand this line, which may be my ignorance.  Should it be \"if e\" rather than \"or e\"?  What is \"54e\"?",
      "fixSuggestions": [
        {
          "fixId": "02152202_8c01cc3e",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/mem.go",
              "range": {
                "startLine": 214,
                "startChar": 0,
                "endLine": 215,
                "endChar": 0
              },
              "replacement": "\t// caused by quantization error of e is approximately 54e, where\n\t// e is the quantization error.\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc66b6f1_dc9310f9",
        "filename": "internal/storage/mem.go",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "The docs for ordered.Decode don\u0027t permit a nil argument.  Presumably this code is correct so those docs should be updated to say that nil is OK and causes Decode to skip the value.",
      "fixSuggestions": [
        {
          "fixId": "087eae85_1adc4b29",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/mem.go",
              "range": {
                "startLine": 234,
                "startChar": 0,
                "endLine": 235,
                "endChar": 0
              },
              "replacement": "\t\tif err :\u003d ordered.Decode(key, nil, nil, \u0026id); err !\u003d nil { // skip namespace\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f6921b7_1f7a656d",
        "filename": "internal/storage/vtest.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-07-08T19:53:29Z",
      "side": 1,
      "message": "The test is looking for exact floating-point matches.  This calculation may use FMA on some platforms and not on others.  So for the test to pass reliably on different CPUs, this should be\n    d +\u003d float64(v[i] * v[i])",
      "fixSuggestions": [
        {
          "fixId": "dc667b0a_91c487b3",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/storage/vtest.go",
              "range": {
                "startLine": 63,
                "startChar": 0,
                "endLine": 64,
                "endChar": 0
              },
              "replacement": "\t\tfl :\u003d v[i] * v[i]\n\t\td +\u003d fl\n"
            }
          ]
        }
      ],
      "revId": "ea341f68a48c2070cd9f15ec22b811c58065ea83",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}